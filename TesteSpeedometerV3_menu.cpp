/*
    The code in this file uses open source libraries provided by thecoderscorner

    DO NOT EDIT THIS FILE, IT WILL BE GENERATED EVERY TIME YOU USE THE UI DESIGNER
    INSTEAD EITHER PUT CODE IN YOUR SKETCH OR CREATE ANOTHER SOURCE FILE.

    All the variables you may need access to are marked extern in this file for easy
    use elsewhere.
 */
//#include "Main.h"
#include <tcMenu.h>
#include "TesteSpeedometerV3_menu.h"

// Global variable declarations

U8g2GfxMenuConfig gfxConfig;
U8g2MenuRenderer renderer;

// Global Menu Item declarations

const PROGMEM AnyMenuInfo minfoFuelCalSetMaxFuel = { "Set Max Fuel", 11, 0xffff, 0, setMfuel };
ActionMenuItem menuFuelCalSetMaxFuel(&minfoFuelCalSetMaxFuel, NULL);
const PROGMEM AnyMenuInfo minfoFuelCalSetZeroFuel = { "Set Zero Fuel", 10, 0xffff, 0, setZfuel };
ActionMenuItem menuFuelCalSetZeroFuel(&minfoFuelCalSetZeroFuel, &menuFuelCalSetMaxFuel);
RENDERING_CALLBACK_NAME_INVOKE(fnFuelCalRtCall, backSubItemRenderFn, "Fuel Cal", -1, NULL)
const PROGMEM SubMenuInfo minfoFuelCal = { "Fuel Cal", 9, 0xffff, 0, NO_CALLBACK };
BackMenuItem menuBackFuelCal(fnFuelCalRtCall, &menuFuelCalSetZeroFuel);
SubMenuItem menuFuelCal(&minfoFuelCal, &menuBackFuelCal, NULL);
const PROGMEM AnalogMenuInfo minfoSleepTimer = { "Sleep Timer", 5, 0xffff, 60, setSleepTimer, 0, 1, " Seg" };
AnalogMenuItem menuSleepTimer(&minfoSleepTimer, 0, &menuFuelCal);
const PROGMEM AnalogMenuInfo minfoEstLiters = { "Est Liters", 7, 0xffff, 45, NO_CALLBACK, 0, 1, " L" };
AnalogMenuItem menuEstLiters(&minfoEstLiters, 0, &menuSleepTimer);
const PROGMEM AnalogMenuInfo minfoMaxOilTemp = { "Max Oil Temp", 4, 0xffff, 255, setOilTemp, 0, 1, " ÂºC" };
AnalogMenuItem menuMaxOilTemp(&minfoMaxOilTemp, 0, &menuEstLiters);
const PROGMEM AnyMenuInfo minfoReturn = { "Return", 8, 0xffff, 0, returnToMain };
ActionMenuItem menuReturn(&minfoReturn, &menuMaxOilTemp);
const PROGMEM ConnectorLocalInfo applicationInfo = { "Settings", "e0133ef9-463c-4d28-bb1b-4d2a87a8c1c7" };

// Set up code

void setupMenu() {
    prepareBasicU8x8Config(gfxConfig);
    renderer.setGraphicsDevice(&oled, &gfxConfig);
    switches.initialiseInterrupt(ioUsingArduino(), true);
    menuMgr.initForEncoder(&renderer, &menuReturn, ENCODER_PIN_A, ENCODER_PIN_B, ENCODER_PIN_OK);


    // Read only and local only function calls
    menuEstLiters.setReadOnly(true);
    menuFuelCal.setLocalOnly(true);
    menuReturn.setLocalOnly(true);
    menuFuelCal.setSecured(true);
}
